- To create an algo, start by defining a subclass of the QCAlgorithm class.
- The class is one big class with lots of helper properties and helper methods.
- Key helper properties include: Security Manager, Portfolio Manager, Transactions Manager, Notification Manager, and Scheduling Manager.
- The Securities property is a dictionary of Security objects. Each asset (Equity, Forex pair, etc) in your algorithm has a Security object.
- The Portfolio is a dictionary of SecurityHolding objects.

class QCAlgorithm:
    securities   # Array of Security objects.
    portfolio    # Array of SecurityHolding objects
    transactions # Transactions helper
    schedule     # Scheduling helper
    notify       # Email, SMS helper
    universe     # Universe helper

    # Set up Requested Data, Cash, Time Period.
    def initialize(self) -> None:

    # Other Event Handlers
    def on_data(self, slice: Slice) -> None:
    def on_end_of_day(self, symbol: Symbol) -> None:
    def on_end_of_algorithm(self) -> None:

    # Indicator Helpers
    def sma(self, symbol: Symbol, period: int) -> SimpleMovingAverage:

- batch vs stream, QuantConnect has a stream process which help provide a live trading like
enviroment, batch data can accidently introduce look ahead bias. 

EVENT FLOW

- When deploying the algo, lean first calls the initialize method.
- In live mode the engine loads holdings and opens orders from your brokerage account to add
data subscriptions and populate the securities, portfolio, and transactions objects.

    TIME MODELING

    - Time modeling: on_data is the primary event handler. This handler takes in a slice object the 
    method takes in represents all of the data at a moment of time, a time-slice.
    - slice objects have a whole list of properties

- LEAN receives the data from the subscriptions, synchronizes the data to create a timeslice, and 
then performs the following steps. Your algorithm can spend up to 10 minutes on each timeslice unless 
you call the train method.
- The engine performs 25 steps that can be found at... 
https://www.quantconnect.com/docs/v2/writing-algorithms/key-concepts/algorithm-engine
- 